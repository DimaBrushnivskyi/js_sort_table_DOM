{"version":3,"sources":["scripts/main.js"],"names":["tBody","document","querySelector","table","rows","addEventListener","action","target","closest","sortedList","sort","a","b","textContent","nameA","innerText","nameB","localeCompare","posA","split","trim","posB","ageA","ageB","salaryA","salaryB","one","slice","join","append"],"mappings":";AAAA,aAMA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAQF,SAASC,cAAc,SAC/BE,EAAWJ,EAAAA,EAAMI,MAEvBD,EAAME,iBAAiB,QAAS,SAAmBC,GAC3CC,IAAAA,EAASD,EAAOC,OAAOC,QAAQ,MAE/BC,EAAaL,EAAKM,KAAK,SAACC,EAAGC,GACvBL,OAAAA,EAAOM,aACR,IAAA,OACGC,IAAAA,EAAQH,EAAEI,UACVC,EAAQJ,EAAEG,UAETD,OAAAA,EAAMG,cAAcD,GAExB,IAAA,WACGE,IAAAA,EAAOP,EAAEI,UACZI,MAAM,MAAM,GACZC,OACAD,MAAM,KAAK,GAERE,EAAOT,EAAEG,UACZI,MAAM,MAAM,GACZC,OACAD,MAAM,KAAK,GAEPD,OAAAA,EAAKD,cAAcI,GAEvB,IAAA,MACGC,IAAAA,EAAOX,EAAEI,UAAUI,MAAM,MAAM,GAAGC,OAGjCG,OAFMX,EAAEG,UAAUI,MAAM,MAAM,GAAGC,OAE1BE,EAEX,IAAA,SACGE,IAAAA,EAAUb,EAAEI,UAAUI,MAAM,MAAM,GAClCM,EAAUb,EAAEG,UAAUI,MAAM,MAAM,GAElCO,EAAMF,EAAQG,MAAM,GAAGR,MAAM,KAAKS,KAAK,IAGtC,OAFKH,EAAQE,MAAM,GAAGR,MAAM,KAAKS,KAAK,KAE9BF,KAIrB1B,EAAM6B,OAAN7B,MAAAA,EAAgBS,EAAAA","file":"main.d3199ff9.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tBody = document.querySelector('tbody');\nconst table = document.querySelector('table');\nconst rows = [...tBody.rows];\n\ntable.addEventListener('click', function sortTable(action) {\n  const target = action.target.closest('th');\n\n  const sortedList = rows.sort((a, b) => {\n    switch (target.textContent) {\n      case 'Name':\n        const nameA = a.innerText;\n        const nameB = b.innerText;\n\n        return nameA.localeCompare(nameB);\n\n      case 'Position':\n        const posA = a.innerText\n          .split('\\t')[1]\n          .trim()\n          .split(' ')[0];\n\n        const posB = b.innerText\n          .split('\\t')[1]\n          .trim()\n          .split(' ')[0];\n\n        return posA.localeCompare(posB);\n\n      case 'Age':\n        const ageA = a.innerText.split('\\t')[2].trim();\n        const ageB = b.innerText.split('\\t')[2].trim();\n\n        return ageB - ageA;\n\n      case 'Salary':\n        const salaryA = a.innerText.split('\\t')[3];\n        const salaryB = b.innerText.split('\\t')[3];\n\n        const one = salaryA.slice(1).split(',').join('');\n        const two = salaryB.slice(1).split(',').join('');\n\n        return +two - +one;\n    }\n  });\n\n  tBody.append(...sortedList);\n});\n"]}